#!/usr/bin/env python
PACKAGE = 'pointcloud_plantdetector'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# box_filter parameters
gen.add('use_box_filter',        bool_t,     0, 'activate the box filter', True)
gen.add("x_min", double_t, -1.0, '...',    -2, -4,   4)
gen.add("y_min", double_t, -1.0, '...',    -2, -4,   4)
gen.add("z_min", double_t, -1.0, '...',   -2, -4,   4)
gen.add("x_max", double_t, 1.0, '...',    2, -4,   4)
gen.add("y_max", double_t, 1.0, '...',    2, -4,   4)
gen.add("z_max", double_t, 1.0, '...',    2, -4,   4)

#ransac plane parameters
gen.add('remove_plane',        bool_t,     0, 'activate the RANSAC plane filter', True)
gen.add("ransac_dist", double_t, 0.05, 'ransac plane distance',    0.09, 0,   1)
gen.add("max_iterations", int_t, 100, 'ransac plane maximum iterations', 10, 0,   1000)
# noise filters
gen.add('use_radius_outlier_filter',        bool_t,     0, 'activate the min cluster algorithm', False)
gen.add("radius", double_t, 0.05, 'radius for filter to apply for outlier filter',    0.05, 0,   1)
gen.add("neigbour_nr", int_t, 10, 'max neigbour number for outlier filter',    1, 0,   1000)
#statistical noise removal
gen.add('use_statistical_outlier_filter',        bool_t,     0, 'activate the statistical outlier filter', True)
gen.add("meanK", int_t, 10, '...',    10, 0,   100)
gen.add("stddev", double_t, 1.0, '...',    0, 0,   4)

#push to plane
gen.add('push_to_plane',        bool_t,     0, 'activate the push to plane filter', False)
gen.add("z_value", double_t, 1.0, '...',    0, -4,   4)

# eucledian cluster parameters
gen.add('use_eucledian_cluster',        bool_t,     0, 'activate the min cluster algorithm', True)
gen.add("minClusterSize", int_t, 10, '...',    8, 0,   25)
gen.add("maxClusterSize", int_t, 1000, '...',    5000, 0,  10000)
gen.add("cluster_distance", double_t, 0.05, 'distance for clusters',    0.05, 0,   1)

# min cluster parameters
gen.add('use_mincluster',        bool_t,     0, 'activate the min cluster algorithm', False)
gen.add("not_used_param", int_t, 10, '...',    0, 0,   25)





exit(gen.generate(PACKAGE, 'pointcloud_plantdetector', 'Filter'))
